rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check for admin role
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Helper function to check for delete permission
    function canDeleteRecords() {
        return 'delete_records' in get(/databases/$(database)/documents/users/$(request.auth.uid)).data.permissions;
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      allow read;
      allow create: if request.auth.uid == userId || isAdmin();
      allow update: if request.auth.uid == userId || isAdmin();
      allow delete: if isAdmin();
    }

    // Rules for the 'registros' collection
    match /registros/{registroId} {
      allow read, create: if request.auth != null;
      allow update: if isAdmin();
      allow delete: if isAdmin() || canDeleteRecords();
    }
  }
}
